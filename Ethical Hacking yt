ip adresses ---> 32 bit 
ipv4 
     >  --------> layer 3 protocols
ipv6 

  format   11111111.10110110. etc 
starting with 192.168 ----> private ip address, does not go out to public 
   Class A    10.0.0 
   Class B    172.16
              172.31 
  Class C     127.0 
 LOOPBACK     127.0  
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
MAC address = physical address = layer 2
L-----> Media Access Control  
format 20:00:0c:8a:42:86
       L ------> first 3 pairs = identifiers 
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 

TCP vs UDP 
Transmission Control Protocol             vs         User Datagram Protocol 
L -----> connection oriented protocol                L --------> connection less protocol
SYN > SYN ACK > ACK
                 L acknowledgement package back to actually connect 
        L port 433 open go ahead
L hey I want to connect on port 433..... 

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
TCP: 
-File-Transfer Protocol- FTP: (21)    //log to server, get a file, put a file. 

-Telnet:(23)      // ability to log into a machine remotely * in clear text 
        >
-SSH:(22)       //  same as Telnet but encrypted 

-SMTP:(25)       ]
-POP3:(110)      ] --------- all relate to mail
-IMAP:(143)      ] 

- Domain Name System-DNS:(53) // a way to resolve ip addresses to names 
- HYypertext Transfer Protocol-HTTP:(80)       // non secure version , not encrypted 
- HTTPS:(443)     // encrypted, secure version  

- SMB: (139 + 445)   // called Samba, used in file shares
                     // open freely on networks, used in many viruses (wannacry-eternal blue-ms17010)
               L ---- on later versions of windows 

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
UDP: 
-DNS:(53) 
-DHCP: (67,68) // associates you with a random ip address x staticc ip address: gives a specific ip address to a specific device when using on the internet 
                                      L ----- through the MAC address layer 2 ---> layer 3 

- TFTP:(69)  //  trivial FTP, utilizes UDP instead of TCP
- SNMP: simple network management protocol 
           L----- encountered on networks

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
OSI Model: (Open System Interconnection)
   
*please do not throw sausage pizza away.

1  Physical                       
                //deals with physical connection between devices 
            L-- includes hardware or transmission medium ex. cables
2  Data link 
               // data transfer and error detection, ensures data transfered over physical layer is error free
            L-- switching, MAC addresses and LLC (logical link control), ethernet.  
3  Network
               //handles routing of data accross devices/ diff networks 
            L--IP addresses, routing 

4  Transport
               // ensures reliable data transfer, provides error correction, data flow control, retransmission of lost data 
            L-- TCP/UDP
5  Session 
               //manages communication sessions 
            L-- RPC (Remote Procedure Call), PPTP (point to point Tunneling Protocol) 
6  Presentation
               //ensures data is usable format and manages encryption 
            L-- SSL/TLS, JPEG, MPEG. 
7  Application 
               //closest to end user, reaction between user and software occurs
            L-- HTTP, FTP,SMTP

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Kali Linux commands 
ls: List files in the directory.
ls -a (list all, including hidden files)
ls -l (long listing format)
cd [directory]: Change directory.
cd .. (go back one directory)
pwd: Print the current directory path.
mkdir [directory_name]: Create a new directory.
rm [file]: Remove a file.
rm -r [directory] (remove directory recursively)
cp [source] [destination]: Copy files or directories.
mv [source] [destination]: Move/rename files or directories. 
cat [file]: View the contents of a file.
nano [file]: Edit files in the terminal.
touch [file_name]: Create an empty file.
less [file]: View file content one screen at a time.
head [file]: View the first 10 lines of a file.
head -n 5 [file] (view first 5 lines)
tail [file]: View the last 10 lines of a file.
tail -f [file] (follow file changes live)
whoami: Show the current user.
who: List users logged into the system.
id: Display user ID and group info.
uname -a: Display system info.
hostname: Display the hostname.
uptime: Show how long the system has been running.
chmod [permissions] [file]: Change file permissions.
Example: chmod 755 [file]
chown [user:group] [file]: Change file owner and group.
Example: chown root:root [file]
ps: Display active processes.
top: Show real-time process monitoring.
kill [PID]: Terminate a process by PID.
kill -9 [PID] (force kill a process)
htop: Interactive process manager (if installed).
fconfig: Display network interfaces (deprecated; use ip addr).
ip addr: Show IP address and network info.
ping [hostname/IP]: Test network connectivity.
netstat: Display network connections.
netstat -tuln (show listening ports and services)
nmap [target]: Network scanning (requires nmap installed).
wget [URL]: Download files from the web.
curl [URL]: Transfer data from or to a server.
apt update: Update package lists.
apt upgrade: Upgrade all installed packages.
apt install [package_name]: Install a package.
apt remove [package_name]: Remove a package.
apt search [package_name]: Search for a package.
tar -cvf [file.tar] [directory]: Create a tar archive.
tar -xvf [file.tar]: Extract a tar archive.
gzip [file]: Compress a file using gzip.
gunzip [file.gz]: Decompress a gzip file.
df -h: Display disk usage in human-readable format.
du -h [file/dir]: Display size of a file or directory.
mount [device] [mount_point]: Mount a device.
umount [mount_point]: Unmount a device.
history: View command history.
clear: Clear terminal screen.
man [command]: Display the manual for a command.
echo [text]: Print text to the terminal



xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
port scanner 

#!/bin/python3 

# python3 scanner.py <ip>   

import sys 
import socket 
from datetime import datetime 

#define target 
if len(sys.argv) == 2: 
	target = socket.gethostbyname(sys.argv[1]) # translates host name to ipv4 
else: 
	 print(" Invalid amount of arguments") 
	 print(" Syntax: python3 scanner.py <ip>") 
	 
#Add a pretty banner 

print("-" * 50) 
print(" Scanning target " + target) 
print("Time Started: " + str(datetime.now())) 
print("-" * 50) 

try: 
	for port in range (50,85) : 
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
	socket.setdefaulttimeout(1) 
	result = s.connect_ex((target,port)) #I want to connect on target and port, port supplied by us, port is range of 50,80 mentioned in range 
	#s,connect_ex --> error indicator , port open --> 0 , port closed --> 1 
	if result == 0: 
		print(" Port () is open")
		s.close() 
		
		
except KeyboardInterrupt: 
	print("\n Exiting Program.") 
	sys.exit() 
	
except socket.gaierror: 
	print(" Hostname could not be resolved.")  
	sys.exit() 
except socket.error:
	print("Could not connect to server.") 
	sys.exit() 



   











